{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jb_kr\\\\homework\\\\src\\\\components\\\\view\\\\Detail\\\\Detail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { useNavigate } from 'react-router';\nimport { API_KEY, API_URL, IMAGE_BASE_URL } from '../../Config';\nimport MainImage from '../MainImage/MainImage';\nimport MovieInfo from './MovieInfo';\nimport { Button, Row } from 'antd';\nimport GridCard from '../Commons/GridCard';\nimport AntCard from '../Commons/AntCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Detail = () => {\n  _s();\n  const {\n    movieId\n  } = useParams();\n  const navigate = useNavigate();\n  // console.log(movieId);\n\n  // [state] =================================================================================================\n  const [Movie, setMovie] = useState({});\n  const [Casts, setCasts] = useState([]);\n  const [ActorToggle, setActorToggle] = useState(false);\n  useEffect(() => {\n    // [영화 정보]\n    const endpointInfo = `${API_URL}${movieId}?api_key=${API_KEY}`;\n    // console.log(endpointInfo);\n\n    // [출연진] 영화에 출연한 배우들의 정보\n    const endpointCrew = `${API_URL}${movieId}/credits?api_key=${API_KEY}`;\n    // console.log('endpointCrew >>', endpointCrew);\n\n    fetch(endpointInfo).then(response => response.json()).then(response => {\n      // console.log(response)\n      setMovie(response);\n    });\n    fetch(endpointCrew).then(response => response.json()).then(response => {\n      console.log(response.cast);\n      setCasts(response.cast);\n    });\n  }, []);\n\n  // 버튼\n  function handleUseHistory() {\n    navigate('/');\n  }\n  function toggleActorView() {\n    setActorToggle(!ActorToggle);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MainImage, {\n      image: `${IMAGE_BASE_URL}w1280${Movie.poster_path}`,\n      title: Movie.title,\n      overview: Movie.overview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleUseHistory,\n        children: \"\\uC601\\uD654 \\uBAA9\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '85%',\n        margin: '20px auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(MovieInfo, {\n        movie: Movie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          margin: '20px 0'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: toggleActorView,\n          children: \"\\uBC30\\uC6B0 \\uBAA9\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), ActorToggle && /*#__PURE__*/_jsxDEV(Row, {\n        gutter: [10, 10],\n        children: Casts.map((cast, index) => {\n          return cast.profile_path && /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: /*#__PURE__*/_jsxDEV(AntCard, {\n              path: `${IMAGE_BASE_URL}w400${cast.profile_path}`,\n              castName: cast.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Detail, \"wdyzyUyY3uNWr70ShX0GzbIJAV0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Detail;\nexport default Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","API_KEY","API_URL","IMAGE_BASE_URL","MainImage","MovieInfo","Button","Row","GridCard","AntCard","jsxDEV","_jsxDEV","Detail","_s","movieId","navigate","Movie","setMovie","Casts","setCasts","ActorToggle","setActorToggle","endpointInfo","endpointCrew","fetch","then","response","json","console","log","cast","handleUseHistory","toggleActorView","children","image","poster_path","title","overview","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","marginTop","onClick","width","margin","movie","gutter","map","index","profile_path","Fragment","path","castName","name","_c","$RefreshReg$"],"sources":["C:/Users/jb_kr/homework/src/components/view/Detail/Detail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router';\r\nimport { useNavigate } from 'react-router';\r\nimport { API_KEY, API_URL, IMAGE_BASE_URL } from '../../Config';\r\nimport MainImage from '../MainImage/MainImage';\r\nimport MovieInfo from './MovieInfo';\r\nimport { Button, Row } from 'antd';\r\nimport GridCard from '../Commons/GridCard';\r\nimport AntCard from '../Commons/AntCard';\r\n\r\nconst Detail = () => {\r\n  const { movieId } = useParams();\r\n  const navigate = useNavigate();\r\n  // console.log(movieId);\r\n\r\n  // [state] =================================================================================================\r\n  const [Movie, setMovie] = useState({});\r\n  const [Casts, setCasts] = useState([]);\r\n  const [ActorToggle, setActorToggle] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // [영화 정보]\r\n    const endpointInfo = `${API_URL}${movieId}?api_key=${API_KEY}`;\r\n    // console.log(endpointInfo);\r\n\r\n    // [출연진] 영화에 출연한 배우들의 정보\r\n    const endpointCrew = `${API_URL}${movieId}/credits?api_key=${API_KEY}`;\r\n    // console.log('endpointCrew >>', endpointCrew);\r\n\r\n    fetch(endpointInfo)\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        // console.log(response)\r\n        setMovie(response)\r\n      })\r\n\r\n    fetch(endpointCrew)\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        console.log(response.cast)\r\n        setCasts(response.cast)\r\n      })\r\n\r\n  }, []);\r\n\r\n  // 버튼\r\n  function handleUseHistory() {\r\n    navigate('/');\r\n  }\r\n\r\n  function toggleActorView() {\r\n    setActorToggle(!ActorToggle);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* Header */}\r\n      <MainImage\r\n        image={`${IMAGE_BASE_URL}w1280${Movie.poster_path}`}\r\n        title={Movie.title}\r\n        overview={Movie.overview}\r\n      />\r\n      {/* Body */}\r\n      <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n        <Button onClick={handleUseHistory}>영화 목록</Button>\r\n      </div>\r\n\r\n      <div style={{ width: '85%', margin: '20px auto' }}>\r\n        {/* Movie Info */}\r\n        <MovieInfo movie={Movie} />\r\n\r\n        {/* Actors Grid */}\r\n        <div style={{ textAlign: 'center', margin: '20px 0' }}>\r\n          <Button onClick={toggleActorView}>배우 목록</Button>\r\n        </div>\r\n\r\n        {/* Movie Grid Card */}\r\n        {ActorToggle &&\r\n          <Row gutter={[10, 10]}>\r\n            {Casts.map((cast, index) => {\r\n              return (cast.profile_path &&\r\n                <React.Fragment key={index}>\r\n                  <AntCard\r\n                    path={`${IMAGE_BASE_URL}w400${cast.profile_path}`}\r\n                    castName={cast.name}\r\n                  />\r\n                </React.Fragment>);\r\n            })}\r\n          </Row>}\r\n\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Detail\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}