[{"C:\\Users\\jb_kr\\homework\\src\\index.js":"1","C:\\Users\\jb_kr\\homework\\src\\reportWebVitals.js":"2","C:\\Users\\jb_kr\\homework\\src\\components\\App.js":"3","C:\\Users\\jb_kr\\homework\\src\\components\\view\\NavBar\\NavBar.js":"4","C:\\Users\\jb_kr\\homework\\src\\components\\view\\LandingPage\\LandingPage.js":"5","C:\\Users\\jb_kr\\homework\\src\\components\\view\\Items\\Items.js":"6","C:\\Users\\jb_kr\\homework\\src\\components\\view\\Footer\\Footer.js":"7","C:\\Users\\jb_kr\\homework\\src\\components\\view\\Detail\\Detail.js":"8","C:\\Users\\jb_kr\\homework\\src\\components\\Config.js":"9","C:\\Users\\jb_kr\\homework\\src\\components\\view\\Detail\\MovieInfo.js":"10","C:\\Users\\jb_kr\\homework\\src\\components\\view\\MainImage\\MainImage.js":"11","C:\\Users\\jb_kr\\homework\\src\\components\\view\\Commons\\GridCard.js":"12","C:\\Users\\jb_kr\\homework\\src\\components\\view\\Commons\\AntCard.js":"13"},{"size":546,"mtime":1698135673178,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1698128549995,"results":"16","hashOfConfig":"15"},{"size":835,"mtime":1698491350269,"results":"17","hashOfConfig":"15"},{"size":936,"mtime":1698311525553,"results":"18","hashOfConfig":"15"},{"size":2462,"mtime":1698412135793,"results":"19","hashOfConfig":"15"},{"size":165,"mtime":1698217183577,"results":"20","hashOfConfig":"15"},{"size":449,"mtime":1698308549000,"results":"21","hashOfConfig":"15"},{"size":2848,"mtime":1698486079908,"results":"22","hashOfConfig":"15"},{"size":184,"mtime":1698286395513,"results":"23","hashOfConfig":"15"},{"size":912,"mtime":1698412653030,"results":"24","hashOfConfig":"15"},{"size":616,"mtime":1698374424313,"results":"25","hashOfConfig":"15"},{"size":1048,"mtime":1698392982694,"results":"26","hashOfConfig":"15"},{"size":1257,"mtime":1698484774684,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"i339oc",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jb_kr\\homework\\src\\index.js",[],[],"C:\\Users\\jb_kr\\homework\\src\\reportWebVitals.js",[],[],"C:\\Users\\jb_kr\\homework\\src\\components\\App.js",[],[],"C:\\Users\\jb_kr\\homework\\src\\components\\view\\NavBar\\NavBar.js",[],[],"C:\\Users\\jb_kr\\homework\\src\\components\\view\\LandingPage\\LandingPage.js",["69","70","71"],[],"import React, { useEffect, useState } from 'react';\r\nimport { API_KEY, API_URL, IMAGE_BASE_URL } from '../../Config';\r\nimport MainImage from '../MainImage/MainImage';\r\nimport { Row, Button, Space } from 'antd';\r\nimport GridCard from '../Commons/GridCard';\r\nimport AntCard from '../Commons/AntCard';\r\n\r\nfunction LandingPage() {\r\n\r\n  // [state] =================================================================\r\n  const [Movies, setMovies] = useState([]);\r\n  const [CurrentPage, setCurrentPage] = useState(0);\r\n\r\n  // 페이지의 첫 번째 영화 정보 저장\r\n  const [MainMovieImage, setMainMovieImage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const page = 1;\r\n    fetchMovies(page);\r\n  }, []);\r\n\r\n  // [button] =================================================================\r\n  const loadMoreItems = () => {\r\n    fetchMovies(CurrentPage+1);\r\n  };\r\n\r\n  function fetchMovies(page) {\r\n    const endpoint = `${API_URL}popular?api_key=${API_KEY}&language=en-US&page=${page}`;\r\n\r\n    fetch(endpoint)\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        console.log(response);\r\n        setMovies([...Movies, ...response.results]);\r\n        setMainMovieImage(response.results[0]);\r\n        setCurrentPage(response.page);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{ width: '100%' }}>\r\n        {/* Main Image */}\r\n        {MainMovieImage &&\r\n          <MainImage\r\n            image={`${IMAGE_BASE_URL}w1280${MainMovieImage.poster_path}`}\r\n            title={MainMovieImage.title}\r\n            overview={MainMovieImage.overview}\r\n          />\r\n          \r\n        }\r\n        <div style={{ width: '85%', margin: '1rem auto' }}>\r\n          <h2>인기 영화</h2>\r\n          <hr />\r\n\r\n          {/* Movie Grid Card */}\r\n          <Row gutter={[10, 10]}>\r\n            {Movies && Movies.map((movie, index) => {\r\n              return (\r\n                <React.Fragment key={index}>\r\n                  <AntCard\r\n                    landingPage={true}\r\n                    path={`${IMAGE_BASE_URL}w400${movie.poster_path}`}\r\n                    title={movie.title}\r\n                    movieId={movie.id}\r\n                  />\r\n                </React.Fragment>);\r\n            })}\r\n          </Row>\r\n        </div>\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n          <Button onClick={loadMoreItems}>더보기</Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n\r\n  )\r\n\r\n\r\n}\r\n\r\nexport default LandingPage\r\n","C:\\Users\\jb_kr\\homework\\src\\components\\view\\Items\\Items.js",[],[],"C:\\Users\\jb_kr\\homework\\src\\components\\view\\Footer\\Footer.js",[],[],"C:\\Users\\jb_kr\\homework\\src\\components\\view\\Detail\\Detail.js",["72","73"],[],"import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router';\r\nimport { useNavigate } from 'react-router';\r\nimport { API_KEY, API_URL, IMAGE_BASE_URL } from '../../Config';\r\nimport MainImage from '../MainImage/MainImage';\r\nimport MovieInfo from './MovieInfo';\r\nimport { Button, Row } from 'antd';\r\nimport GridCard from '../Commons/GridCard';\r\nimport AntCard from '../Commons/AntCard';\r\n\r\nconst Detail = () => {\r\n  const { movieId } = useParams();\r\n  const navigate = useNavigate();\r\n  // console.log(movieId);\r\n\r\n  // [state] =================================================================================================\r\n  const [Movie, setMovie] = useState({});\r\n  const [Casts, setCasts] = useState([]);\r\n  const [ActorToggle, setActorToggle] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // [영화 정보]\r\n    const endpointInfo = `${API_URL}${movieId}?api_key=${API_KEY}`;\r\n    // console.log(endpointInfo);\r\n\r\n    // [출연진] 영화에 출연한 배우들의 정보\r\n    const endpointCrew = `${API_URL}${movieId}/credits?api_key=${API_KEY}`;\r\n    // console.log('endpointCrew >>', endpointCrew);\r\n\r\n    fetch(endpointInfo)\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        // console.log(response)\r\n        setMovie(response)\r\n      })\r\n\r\n    fetch(endpointCrew)\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        console.log(response.cast)\r\n        setCasts(response.cast)\r\n      })\r\n\r\n  }, []);\r\n\r\n  // 버튼\r\n  function handleUseHistory() {\r\n    navigate('/');\r\n  }\r\n\r\n  function toggleActorView() {\r\n    setActorToggle(!ActorToggle);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* Header */}\r\n      <MainImage\r\n        image={`${IMAGE_BASE_URL}w1280${Movie.poster_path}`}\r\n        title={Movie.title}\r\n        overview={Movie.overview}\r\n      />\r\n      {/* Body */}\r\n      <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n        <Button onClick={handleUseHistory}>영화 목록</Button>\r\n      </div>\r\n\r\n      <div style={{ width: '85%', margin: '20px auto' }}>\r\n        {/* Movie Info */}\r\n        <MovieInfo movie={Movie} />\r\n\r\n        {/* Actors Grid */}\r\n        <div style={{ textAlign: 'center', margin: '20px 0' }}>\r\n          <Button onClick={toggleActorView}>배우 목록</Button>\r\n        </div>\r\n\r\n        {/* Movie Grid Card */}\r\n        {ActorToggle &&\r\n          <Row gutter={[10, 10]}>\r\n            {Casts.map((cast, index) => {\r\n              return (cast.profile_path &&\r\n                <React.Fragment key={index}>\r\n                  <AntCard\r\n                    path={`${IMAGE_BASE_URL}w400${cast.profile_path}`}\r\n                    castName={cast.name}\r\n                  />\r\n                </React.Fragment>);\r\n            })}\r\n          </Row>}\r\n\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Detail\r\n","C:\\Users\\jb_kr\\homework\\src\\components\\Config.js",[],[],"C:\\Users\\jb_kr\\homework\\src\\components\\view\\Detail\\MovieInfo.js",[],[],"C:\\Users\\jb_kr\\homework\\src\\components\\view\\MainImage\\MainImage.js",[],[],"C:\\Users\\jb_kr\\homework\\src\\components\\view\\Commons\\GridCard.js",[],[],"C:\\Users\\jb_kr\\homework\\src\\components\\view\\Commons\\AntCard.js",[],[],{"ruleId":"74","severity":1,"message":"75","line":4,"column":23,"nodeType":"76","messageId":"77","endLine":4,"endColumn":28},{"ruleId":"74","severity":1,"message":"78","line":5,"column":8,"nodeType":"76","messageId":"77","endLine":5,"endColumn":16},{"ruleId":"79","severity":1,"message":"80","line":20,"column":6,"nodeType":"81","endLine":20,"endColumn":8,"suggestions":"82"},{"ruleId":"74","severity":1,"message":"78","line":8,"column":8,"nodeType":"76","messageId":"77","endLine":8,"endColumn":16},{"ruleId":"79","severity":1,"message":"83","line":44,"column":6,"nodeType":"81","endLine":44,"endColumn":8,"suggestions":"84"},"no-unused-vars","'Space' is defined but never used.","Identifier","unusedVar","'GridCard' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMovies'. Either include it or remove the dependency array.","ArrayExpression",["85"],"React Hook useEffect has a missing dependency: 'movieId'. Either include it or remove the dependency array.",["86"],{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},"Update the dependencies array to be: [fetchMovies]",{"range":"91","text":"92"},"Update the dependencies array to be: [movieId]",{"range":"93","text":"94"},[672,674],"[fetchMovies]",[1457,1459],"[movieId]"]